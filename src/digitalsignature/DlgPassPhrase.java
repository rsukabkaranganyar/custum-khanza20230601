/*
  Dilarang keras menggandakan/mengcopy/menyebarkan/membajak/mendecompile 
  Software ini dalam bentuk apapun tanpa seijin pembuat software
  (Khanza.Soft Media). Bagi yang sengaja membajak softaware ini ta
  npa ijin, kami sumpahi sial 1000 turunan, miskin sampai 500 turu
  nan. Selalu mendapat kecelakaan sampai 400 turunan. Anak pertama
  nya cacat tidak punya kaki sampai 300 turunan. Susah cari jodoh
  sampai umur 50 tahun sampai 200 turunan. Ya Alloh maafkan kami 
  karena telah berdoa buruk, semua ini kami lakukan karena kami ti
  dak pernah rela karya kami dibajak tanpa ijin.
 */

package digitalsignature;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
//import custom.*;
import fungsi.akses;
import simrskhanza.*;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import inventory.DlgCariKonversi;
import inventory.DlgCariObat;
import inventory.DlgCariObat2;
import inventory.DlgCariObat3;
import java.io.File;
import java.net.http.HttpResponse;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import org.apache.commons.io.FileUtils;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.mime.HttpMultipartMode;
import org.apache.http.entity.mime.MultipartEntity;
import org.apache.http.entity.mime.content.ByteArrayBody;
import org.apache.http.impl.client.DefaultHttpClient;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;

/**
 *
 * @author perpustakaan
 */
public class DlgPassPhrase extends javax.swing.JDialog {
    private Connection koneksi=koneksiDB.condb();
    private sekuel Sequel=new sekuel();
    private String username="";
    private validasi Valid=new validasi();
    private PreparedStatement ps;
    private ResultSet rs;
    private String link="",URL="",requestJson="";
     private HttpHeaders headers;
    private HttpEntity requestEntity;
    private ObjectMapper mapper = new ObjectMapper();
    private JsonNode root;
    private JsonNode nameNode,code,metadata;
    private JsonNode response;
    private TteApi apiTte=new TteApi();

    /** Creates new form DlgPemberianObat
     * @param parent
     * @param modal */
    public DlgPassPhrase(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.setLocation(8,1);
        setSize(885,674);
    }

    //private DlgCariObatPenyakit dlgobtpny=new DlgCariObatPenyakit(null,false);
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        FormInput = new widget.PanelBiasa();
        jLabel3 = new widget.Label();
        BtnKeluar1 = new widget.Button();
        jLabel4 = new widget.Label();
        txtNamaFile = new widget.TextBox();
        txtNik = new widget.TextBox();
        jLabel5 = new widget.Label();
        txtLokasiFile = new widget.TextBox();
        jLabel6 = new widget.Label();
        txtNoRawat = new widget.TextBox();
        txtPassPhrase = new widget.PasswordBox();
        panelGlass8 = new widget.panelisi();
        BtnSimpan = new widget.Button();
        BtnKeluar = new widget.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Passphrase ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10), new java.awt.Color(70, 70, 70))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        FormInput.setName("FormInput"); // NOI18N
        FormInput.setPreferredSize(new java.awt.Dimension(865, 137));
        FormInput.setLayout(null);

        jLabel3.setText("Passphrase");
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        FormInput.add(jLabel3);
        jLabel3.setBounds(0, 50, 110, 23);

        BtnKeluar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/85.png"))); // NOI18N
        BtnKeluar1.setMnemonic('T');
        BtnKeluar1.setToolTipText("Alt+T");
        BtnKeluar1.setName("BtnKeluar1"); // NOI18N
        BtnKeluar1.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluar1ActionPerformed(evt);
            }
        });
        BtnKeluar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluar1KeyPressed(evt);
            }
        });
        FormInput.add(BtnKeluar1);
        BtnKeluar1.setBounds(580, 50, 40, 30);

        jLabel4.setText("Nama Dokumen");
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        FormInput.add(jLabel4);
        jLabel4.setBounds(0, 10, 110, 23);

        txtNamaFile.setEditable(false);
        txtNamaFile.setEnabled(false);
        txtNamaFile.setHighlighter(null);
        txtNamaFile.setName("txtNamaFile"); // NOI18N
        txtNamaFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaFileActionPerformed(evt);
            }
        });
        FormInput.add(txtNamaFile);
        txtNamaFile.setBounds(120, 10, 450, 30);

        txtNik.setEditable(false);
        txtNik.setText("0803202100007062");
        txtNik.setEnabled(false);
        txtNik.setHighlighter(null);
        txtNik.setName("txtNik"); // NOI18N
        txtNik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNikActionPerformed(evt);
            }
        });
        FormInput.add(txtNik);
        txtNik.setBounds(120, 100, 450, 30);

        jLabel5.setText("Lokasi Dokumen");
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        FormInput.add(jLabel5);
        jLabel5.setBounds(0, 140, 110, 23);

        txtLokasiFile.setEditable(false);
        txtLokasiFile.setEnabled(false);
        txtLokasiFile.setHighlighter(null);
        txtLokasiFile.setName("txtLokasiFile"); // NOI18N
        txtLokasiFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLokasiFileActionPerformed(evt);
            }
        });
        FormInput.add(txtLokasiFile);
        txtLokasiFile.setBounds(120, 140, 450, 30);

        jLabel6.setText("No Rawat");
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        FormInput.add(jLabel6);
        jLabel6.setBounds(0, 180, 110, 23);

        txtNoRawat.setEditable(false);
        txtNoRawat.setEnabled(false);
        txtNoRawat.setHighlighter(null);
        txtNoRawat.setName("txtNoRawat"); // NOI18N
        txtNoRawat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoRawatActionPerformed(evt);
            }
        });
        FormInput.add(txtNoRawat);
        txtNoRawat.setBounds(120, 180, 450, 30);

        txtPassPhrase.setForeground(new java.awt.Color(50, 50, 50));
        txtPassPhrase.setToolTipText("Silahkan masukkan password");
        txtPassPhrase.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtPassPhrase.setName("txtPassPhrase"); // NOI18N
        txtPassPhrase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassPhraseKeyPressed(evt);
            }
        });
        FormInput.add(txtPassPhrase);
        txtPassPhrase.setBounds(120, 50, 450, 30);

        internalFrame1.add(FormInput, java.awt.BorderLayout.CENTER);
        FormInput.getAccessibleContext().setAccessibleName("");
        FormInput.getAccessibleContext().setAccessibleDescription("");

        panelGlass8.setName("panelGlass8"); // NOI18N
        panelGlass8.setPreferredSize(new java.awt.Dimension(100, 56));
        panelGlass8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        BtnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/peminjaman.png"))); // NOI18N
        BtnSimpan.setMnemonic('S');
        BtnSimpan.setText("Signature File");
        BtnSimpan.setToolTipText("Alt+S");
        BtnSimpan.setName("BtnSimpan"); // NOI18N
        BtnSimpan.setPreferredSize(new java.awt.Dimension(150, 30));
        BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpanActionPerformed(evt);
            }
        });
        BtnSimpan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnSimpanKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnSimpan);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/cross.png"))); // NOI18N
        BtnKeluar.setMnemonic('T');
        BtnKeluar.setText("Batal");
        BtnKeluar.setToolTipText("Alt+T");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnKeluar);

        internalFrame1.add(panelGlass8, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpanActionPerformed
        if (akses.getkode()=="Admin Utama")
        {
        username=akses.getkode();
        }
        else{
        username=Sequel.cariIsi("select nama from pegawai where nik=?",akses.getkode());
        }
        uploadPdf(txtNamaFile.getText());
        
        
        
        try {
            link="http://localhost/webapps/berkastte/";
            URL = link+"signtte.php";
           // System.out.println(URL);
            headers= new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_JSON);
//	    headers.add("X-Cons-ID",koneksiDB.CONSIDAPIBPJS());
//	    headers.add("X-Timestamp",String.valueOf(api.GetUTCdatetimeAsString()));  
//            headers.add("user_key",koneksiDB.USERKEYAPIBPJS());
//	    utc=String.valueOf(api.GetUTCdatetimeAsString());
//                headers.add("X-Signature",api.getHmac(utc));
        requestJson =" {" +
                    "\"nik\":\""+txtNik.getText()+"\","+
                    "\"passphrase\":\""+txtPassPhrase.getText()+"\","+
                    "\"document\":\""+txtNamaFile.getText()+"\","+
                    "\"location\":\""+txtLokasiFile.getText()+"\","+
                    "\"tag\":\"#\""+
                "}" ;
	    requestEntity = new HttpEntity(requestJson,headers);
	    root = mapper.readTree(apiTte.getRest().exchange(URL, HttpMethod.POST, requestEntity, String.class).getBody());
            metadata = root.path("metadata");
//            JOptionPane.showMessageDialog(null,metadata.path("message").asText());
            
//             int jawab=JOptionPane.showConfirmDialog(null, metadata.path("message").asText(),"Konfirmasi",JOptionPane.YES_NO_OPTION);
//                    if(jawab==JOptionPane.YES_OPTION){
//                       dispose(); 
//                    }
             JOptionPane.showMessageDialog(null,metadata.path("message").asText());        
                    if(metadata.path("code").asText().equals("200")){
                        Sequel.menyimpantf("berkas_tte","?,?,?,?,?,?,?","No.Rawat",7,new String[]{
                    txtNamaFile.getText(),txtNoRawat.getText(),metadata.path("datetime").asText(),"",txtLokasiFile.getText(),txtNamaFile.getText(),"MEDIS"
                    });
                    dispose(); 
                    }
                    
//            response =root.path("response");
//              System.out.println(root);
//              
        } catch (Exception e) {
            System.out.println(e);
        }
}//GEN-LAST:event_BtnSimpanActionPerformed

    private void BtnSimpanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnSimpanKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnSimpanActionPerformed(null);
        }else{

        }
}//GEN-LAST:event_BtnSimpanKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
}//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }
}//GEN-LAST:event_BtnKeluarKeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void BtnKeluar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnKeluar1ActionPerformed

    private void BtnKeluar1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluar1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnKeluar1KeyPressed

    private void txtNamaFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaFileActionPerformed

    private void txtLokasiFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLokasiFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLokasiFileActionPerformed

    private void txtNoRawatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoRawatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoRawatActionPerformed

    private void txtPassPhraseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassPhraseKeyPressed
      
    }//GEN-LAST:event_txtPassPhraseKeyPressed

    private void txtNikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNikActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNikActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgPassPhrase dialog = new DlgPassPhrase(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnKeluar;
    private widget.Button BtnKeluar1;
    private widget.Button BtnSimpan;
    private widget.PanelBiasa FormInput;
    private widget.InternalFrame internalFrame1;
    private widget.Label jLabel3;
    private widget.Label jLabel4;
    private widget.Label jLabel5;
    private widget.Label jLabel6;
    private widget.panelisi panelGlass8;
    private widget.TextBox txtLokasiFile;
    private widget.TextBox txtNamaFile;
    private widget.TextBox txtNik;
    private widget.TextBox txtNoRawat;
    private widget.PasswordBox txtPassPhrase;
    // End of variables declaration//GEN-END:variables
    

    public void setNamaFile(String namaFile,String pathFile,String NoRawat) {
        txtNamaFile.setText(namaFile);
         txtLokasiFile.setText(pathFile);
         txtNoRawat.setText(NoRawat);
         
    }

    
    
    public void isCek(){
        BtnSimpan.setEnabled(true);

       
        
    }
void uploadPdf(String FileName){
    try{
        File file =new File("tempfile/"+FileName);
        byte[] data = new byte[(int) file.length()];
        data = FileUtils.readFileToByteArray(file);
        HttpClient httpClient = new DefaultHttpClient();
        HttpPost postRequest = new HttpPost("http://localhost/webapps/berkastte/upload.php?doc=resume");
        ByteArrayBody fileData = new ByteArrayBody(data, FileName);
        MultipartEntity reqEntity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);
        reqEntity.addPart("file", fileData); 
        postRequest.setEntity(reqEntity);
        HttpResponse response = (HttpResponse) httpClient.execute(postRequest); 
        deleteFile();
        }catch (Exception e){
            System.out.println(e);
        }
}
void deleteFile(){
       File file = new File("tempfile");      
        String[] myFiles;    
        if (file.isDirectory()) {
            myFiles = file.list();
            for (int i = 0; i < myFiles.length; i++) {
                File myFile = new File(file, myFiles[i]); 
                myFile.delete();
            }
        }
   }


}
